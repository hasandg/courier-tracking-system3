spring.application.name=distance-calculation-service
server.port=8083
spring.cloud.config.uri=http://localhost:8889
spring.config.import=optional:configserver:http://localhost:8889
spring.datasource.url=jdbc:postgresql://localhost:5432/courier_tracking
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
spring.liquibase.contexts=development
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=distance-calculation-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.hasandag.courier.tracking.*
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000
# Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/courier-tracking
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/courier-tracking/protocol/openid-connect/certs
management.endpoints.web.exposure.include=health,info,prometheus,circuitbreakers,circuitbreakerevents
management.prometheus.metrics.export.enabled=true
management.endpoint.metrics.access=unrestricted
management.endpoint.prometheus.access=unrestricted
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
application.kafka.topics.location-events=courier-locations
application.cache.ttl-seconds=3600
feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
feign.client.config.default.loggerLevel=basic
# CircuitBreaker Configuration for LocationService
resilience4j.circuitbreaker.instances.locationService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.locationService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.locationService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.locationService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.locationService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.locationService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.locationService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.locationService.eventConsumerBufferSize=10
# CircuitBreaker Configuration for Redis
resilience4j.circuitbreaker.instances.redisService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.redisService.slidingWindowSize=20
resilience4j.circuitbreaker.instances.redisService.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.redisService.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.instances.redisService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.redisService.failureRateThreshold=60
resilience4j.circuitbreaker.instances.redisService.slowCallRateThreshold=50
resilience4j.circuitbreaker.instances.redisService.slowCallDurationThreshold=1s
# CircuitBreaker Configuration for KafkaProcessing
resilience4j.circuitbreaker.instances.kafkaProcessing.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.kafkaProcessing.slidingWindowSize=10
resilience4j.circuitbreaker.instances.kafkaProcessing.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.kafkaProcessing.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.kafkaProcessing.failureRateThreshold=50
# Retry Configuration
resilience4j.retry.instances.locationService.maxAttempts=3
resilience4j.retry.instances.locationService.waitDuration=500ms
resilience4j.retry.instances.locationService.enableExponentialBackoff=true
resilience4j.retry.instances.locationService.exponentialBackoffMultiplier=2
# Bulkhead Configuration
resilience4j.bulkhead.instances.locationService.maxConcurrentCalls=20
resilience4j.bulkhead.instances.locationService.maxWaitDuration=500ms
# Rate Limiter Configuration
resilience4j.ratelimiter.instances.locationService.limitForPeriod=100
resilience4j.ratelimiter.instances.locationService.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.locationService.timeoutDuration=0s
# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.displayRequestDuration=true
springdoc.packages-to-scan=com.hasandag.courier.tracking.system.distancecalculation.controller
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
springdoc.swagger-ui.url=/v3/api-docs

spring.application.name=location-service
server.port=8084
spring.cloud.config.uri=http://localhost:8889
spring.config.import=optional:configserver:http://localhost:8889
spring.datasource.url=jdbc:postgresql://localhost:5432/courier_tracking
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.kafka.bootstrap-servers=localhost:19092,localhost:29092,localhost:39092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.acks=all
spring.kafka.producer.properties.retries=10
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
# Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/courier-tracking
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/courier-tracking/protocol/openid-connect/certs
management.endpoints.web.exposure.include=health,info,prometheus
management.prometheus.metrics.export.enabled=true
management.endpoint.health.show-details=always
management.endpoint.metrics.access=unrestricted
management.endpoint.prometheus.access=unrestricted
application.kafka.topics.location-events=courier-locations
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.displayRequestDuration=true
springdoc.packages-to-scan=com.hasandag.courier.tracking.system.location.controller